paths:
  /api/carts:
    get:
      tags:
        - Carts
      summary: Get all products
      description: Show all available products 
      responses:
        "200":
          description: All products were delivered
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product' 
        "400":
          description: Bad request
        "401":
          description: Not authenticated
        "403":
          description: Forbidden, user not authorized
        "500":
          description: Server error
    post:
      security: 
        - cookieAuth: []
      tags:
       - Carts
      summary: Post a new product
      description: Post a product that you want to sell
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/Product"
  /api/carts/{pid}:
    get:
      tags:
        - Carts
      summary: Get a product by its id
      description: Show just a product found out by its id
      parameters:
      - name: pid
        in: path
        required: true
        description: Product id to find it
        schema:
          $type: String
      responses:
        "200":
          description: The product was delivered
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "400":
          description: Bad request
        "401":
          description: Not authenticated
        "403":
          description: Forbidden, user not authorized
        "500":
          description: Server error
    put:
      security:
        - cookieAuth: []
      tags:
        - Carts
      summary: Upgrade a product
      description: Update a product with its id
      parameters:
      - name: pid
        in: path
        required: true
        description: Product id to find and update it
        schema:
          $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/Product"
      responses:
        "200":
          description: The product was updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  acknowledged: 
                    type: string
                    example: true
                  modifiedCount:
                    type: number
                    example: 1
                  upsertedId:
                    type: string
                    example: null
                  upsertedCount:
                    type: number
                    example: 0
                  matchedCount:
                    type: number
                    example: 1
        "400":
          description: Bad request
        "401":
          description: Not authenticated
        "403":
          description: Forbidden, user not authorized
        "500":
          description: Server error
    delete:
      security: 
        - cookieAuth: []
      tags:
        - Carts
      summary: Delete a product
      description: Delete a product with its id
      parameters:
      - name: pid
        in: path
        required: true
        description: Product id to find and delete it
        schema:
          $type: string
      responses:
        "200":
          description: The product was deleted
          # content:
          #   application/json:
          #     schema:
          #       type: object
          #       properties:
          #         acknowledged: 
          #           type: string
          #           example: true
          #         modifiedCount:
          #           type: number
          #           example: 1
          #         upsertedId:
          #           type: string
          #           example: null
          #         upsertedCount:
          #           type: number
          #           example: 0
          #         matchedCount:
          #           type: number
          #           example: 1
        "400":
          description: Bad request
        "401":
          description: Not authenticated
        "403":
          description: Forbidden, user not authorized
        "500":
          description: Server error

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          example: jahsasndod
        id:
          type: integer
          example: 5
        title:
          type: string
          example: galletas
        description:
          type: string
          example: de arroz
        price:
          type: integer
          example: 48
        thumbail:
          type: string
          example: url1
        code:
          type: integer
          example: 111
        stock:
          type: integer
          example: 1
        status:
          type: string
          enum:
            - true
            - false
          example: true
        category:
          type: string
          example: comida
        owner:
          type: string
          example: example@example.com
  requestBodies:
    Product:
      type: object
      properties:
        title:
          type: string
          example: teclado
        description:
          type: string
          example: periféricos para PC
        price:
          type: number
          example: 500
        thumbail:
          type: string
          example: url
        code:
          type: number
          example: 123
        stock:
          type: number
          example: 3
        category:
          type: string
          example: computación
  securitySchemes: 
    cookieAuth: 
      type: apiKey
      in: cookie
      name: jwt